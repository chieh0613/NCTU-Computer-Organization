$date
	Thu Jun 04 16:45:31 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 # ifid_MemRead $end
$var wire 1 $ ifid_MemWrite $end
$var wire 1 " rst_i $end
$var wire 32 % pc_o [31:0] $end
$var wire 32 & pc_i [31:0] $end
$var wire 32 ' memwb_data [31:0] $end
$var wire 1 ( memwb_RegWrite $end
$var wire 5 ) memwb_RD [4:0] $end
$var wire 1 * memwb_MemtoReg $end
$var wire 32 + memwb_ALU_result [31:0] $end
$var wire 32 , instr [31:0] $end
$var wire 32 - ifid_instr [31:0] $end
$var wire 32 . ifid_imm_o [31:0] $end
$var wire 1 / ifid_RegWrite $end
$var wire 32 0 ifid_RTdata_o [31:0] $end
$var wire 32 1 ifid_RSdata_o [31:0] $end
$var wire 1 2 ifid_MemtoReg $end
$var wire 4 3 ifid_ALU_ctrl [3:0] $end
$var wire 1 4 ifid_ALUSrc $end
$var wire 2 5 ifid_ALUOp [1:0] $end
$var wire 32 6 idex_imm [31:0] $end
$var wire 1 7 idex_RegWrite $end
$var wire 32 8 idex_RT_data [31:0] $end
$var wire 5 9 idex_RT [4:0] $end
$var wire 32 : idex_RS_data [31:0] $end
$var wire 5 ; idex_RS [4:0] $end
$var wire 5 < idex_RD [4:0] $end
$var wire 1 = idex_MemtoReg $end
$var wire 1 > idex_MemWrite $end
$var wire 1 ? idex_MemRead $end
$var wire 32 @ idex_ALU_result [31:0] $end
$var wire 4 A idex_ALU_ctrl [3:0] $end
$var wire 1 B idex_ALUSrc $end
$var wire 2 C idex_ALUOp [1:0] $end
$var wire 1 D forwarding_RT $end
$var wire 1 E forwarding_RS $end
$var wire 2 F forwarding_B [1:0] $end
$var wire 2 G forwarding_A [1:0] $end
$var wire 32 H exmem_data [31:0] $end
$var wire 1 I exmem_RegWrite $end
$var wire 32 J exmem_RT_data [31:0] $end
$var wire 5 K exmem_RD [4:0] $end
$var wire 1 L exmem_MemtoReg $end
$var wire 1 M exmem_MemWrite $end
$var wire 1 N exmem_MemRead $end
$var wire 32 O exmem_ALU_result [31:0] $end
$var wire 32 P Write_data [31:0] $end
$var wire 32 Q SRC2 [31:0] $end
$var wire 32 R SRC1 [31:0] $end
$var wire 32 S RT_read [31:0] $end
$var wire 32 T RS_read [31:0] $end
$var wire 4 U ALU_Ctrl_o [3:0] $end
$var wire 32 V ALUSrc2 [31:0] $end
$scope module ALU_Ctrl $end
$var wire 4 W instr [3:0] $end
$var wire 2 X ALUOp [1:0] $end
$var reg 4 Y ALU_Ctrl_o [3:0] $end
$upscope $end
$scope module Adder1 $end
$var wire 32 Z src2_i [31:0] $end
$var wire 32 [ sum_o [31:0] $end
$var wire 32 \ src1_i [31:0] $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 ! clk_i $end
$var wire 32 ] data_o [31:0] $end
$var wire 32 ^ data_i [31:0] $end
$var wire 32 _ addr_i [31:0] $end
$var wire 1 M MemWrite_i $end
$var wire 1 N MemRead_i $end
$var integer 32 ` i [31:0] $end
$upscope $end
$scope module Decoder $end
$var wire 1 # MemRead $end
$var wire 1 $ MemWrite $end
$var wire 7 a opcode [6:0] $end
$var wire 32 b instr_i [31:0] $end
$var wire 1 / RegWrite $end
$var wire 1 2 MemtoReg $end
$var wire 1 4 ALUSrc $end
$var wire 2 c ALUOp [1:0] $end
$upscope $end
$scope module IM $end
$var wire 32 d instr_o [31:0] $end
$var wire 32 e addr_i [31:0] $end
$var integer 32 f i [31:0] $end
$upscope $end
$scope module ImmGen $end
$var wire 7 g opcode [6:0] $end
$var wire 32 h instr_i [31:0] $end
$var reg 32 i Imm_Gen_o [31:0] $end
$upscope $end
$scope module MUX_RSSrc $end
$var wire 1 E select_i $end
$var wire 32 j data1_i [31:0] $end
$var wire 32 k data0_i [31:0] $end
$var reg 32 l data_o [31:0] $end
$upscope $end
$scope module MUX_RTSrc $end
$var wire 1 D select_i $end
$var wire 32 m data1_i [31:0] $end
$var wire 32 n data0_i [31:0] $end
$var reg 32 o data_o [31:0] $end
$upscope $end
$scope module Mux_ALUSrc $end
$var wire 1 B select_i $end
$var wire 32 p data1_i [31:0] $end
$var wire 32 q data0_i [31:0] $end
$var reg 32 r data_o [31:0] $end
$upscope $end
$scope module Mux_ALUSrc1 $end
$var wire 2 s select_i [1:0] $end
$var wire 32 t data2_i [31:0] $end
$var wire 32 u data1_i [31:0] $end
$var wire 32 v data0_i [31:0] $end
$var reg 32 w data_o [31:0] $end
$upscope $end
$scope module Mux_ALUSrc2 $end
$var wire 2 x select_i [1:0] $end
$var wire 32 y data2_i [31:0] $end
$var wire 32 z data1_i [31:0] $end
$var wire 32 { data0_i [31:0] $end
$var reg 32 | data_o [31:0] $end
$upscope $end
$scope module Mux_MemtoReg $end
$var wire 1 * select_i $end
$var wire 32 } data1_i [31:0] $end
$var wire 32 ~ data0_i [31:0] $end
$var reg 32 !" data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 "" pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 #" pc_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 32 $" RDdata_i [31:0] $end
$var wire 5 %" RSaddr_i [4:0] $end
$var wire 32 &" RSdata_o [31:0] $end
$var wire 5 '" RTaddr_i [4:0] $end
$var wire 32 (" RTdata_o [31:0] $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 ( RegWrite_i $end
$var wire 5 )" RDaddr_i [4:0] $end
$upscope $end
$scope module alu $end
$var wire 4 *" ALU_control [3:0] $end
$var wire 1 " rst_n $end
$var wire 32 +" src1 [31:0] $end
$var wire 32 ," src2 [31:0] $end
$var reg 32 -" result [31:0] $end
$upscope $end
$scope module exmem $end
$var wire 32 ." ALU_result_i [31:0] $end
$var wire 32 /" RT_data_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 7 RegWrite_i $end
$var wire 5 0" RD_i [4:0] $end
$var wire 1 = MemtoReg_i $end
$var wire 1 > MemWrite_i $end
$var wire 1 ? MemRead_i $end
$var reg 32 1" ALU_result_o [31:0] $end
$var reg 1 N MemRead_o $end
$var reg 1 M MemWrite_o $end
$var reg 1 L MemtoReg_o $end
$var reg 5 2" RD_o [4:0] $end
$var reg 32 3" RT_data_o [31:0] $end
$var reg 1 I RegWrite_o $end
$upscope $end
$scope module forwardingunit $end
$var wire 5 4" exmem_RD [4:0] $end
$var wire 1 I exmem_WB $end
$var wire 1 ( memwb_WB $end
$var wire 5 5" memwb_RD [4:0] $end
$var wire 5 6" Rs2 [4:0] $end
$var wire 5 7" Rs1 [4:0] $end
$var reg 2 8" forwarding_A [1:0] $end
$var reg 2 9" forwarding_B [1:0] $end
$upscope $end
$scope module forwardingunit2 $end
$var wire 5 :" Rs1 [4:0] $end
$var wire 5 ;" Rs2 [4:0] $end
$var wire 1 ( memwb_WB $end
$var wire 5 <" memwb_RD [4:0] $end
$var reg 1 E forwarding_RS $end
$var reg 1 D forwarding_RT $end
$upscope $end
$scope module idex $end
$var wire 2 =" ALUOp_i [1:0] $end
$var wire 1 4 ALUSrc_i $end
$var wire 4 >" ALU_ctrl_i [3:0] $end
$var wire 1 # MemRead_i $end
$var wire 1 $ MemWrite_i $end
$var wire 1 2 MemtoReg_i $end
$var wire 5 ?" RD_i [4:0] $end
$var wire 32 @" RS_data_i [31:0] $end
$var wire 5 A" RS_i [4:0] $end
$var wire 32 B" RT_data_i [31:0] $end
$var wire 5 C" RT_i [4:0] $end
$var wire 1 / RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 D" imm_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 2 E" ALUOp_o [1:0] $end
$var reg 1 B ALUSrc_o $end
$var reg 4 F" ALU_ctrl_o [3:0] $end
$var reg 1 ? MemRead_o $end
$var reg 1 > MemWrite_o $end
$var reg 1 = MemtoReg_o $end
$var reg 5 G" RD_o [4:0] $end
$var reg 32 H" RS_data_o [31:0] $end
$var reg 5 I" RS_o [4:0] $end
$var reg 32 J" RT_data_o [31:0] $end
$var reg 5 K" RT_o [4:0] $end
$var reg 1 7 RegWrite_o $end
$var reg 32 L" imm_o [31:0] $end
$upscope $end
$scope module ifid $end
$var wire 1 ! clk_i $end
$var wire 32 M" instr_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 N" instr_o [31:0] $end
$upscope $end
$scope module memwb $end
$var wire 32 O" ALU_result_i [31:0] $end
$var wire 1 L MemtoReg_i $end
$var wire 5 P" RD_i [4:0] $end
$var wire 1 I RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 Q" mem_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 R" ALU_result_o [31:0] $end
$var reg 1 * MemtoReg_o $end
$var reg 5 S" RD_o [4:0] $end
$var reg 1 ( RegWrite_o $end
$var reg 32 T" mem_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
b100000 f
bx e
bx d
bx c
bx b
bx a
b10000000 `
bx _
bx ^
bx ]
bx \
bx [
b100 Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
xN
xM
xL
bx K
bx J
xI
bx H
bx G
bx F
xE
xD
bx C
xB
bx A
bx @
x?
x>
x=
bx <
bx ;
bx :
bx 9
bx 8
x7
bx 6
bx 5
x4
bx 3
x2
bx 1
bx 0
x/
bx .
bx -
bx ,
bx +
x*
bx )
x(
bx '
bx &
bx %
0$
0#
0"
0!
$end
#25000
b0 Q
b0 r
b0 ,"
b0 0
b0 o
b0 B"
b0 1
b0 l
b0 @"
b0 V
b0 q
b0 |
b0 /"
b0 R
b0 w
b0 +"
b0 F
b0 x
b0 9"
b0 G
b0 s
b0 8"
0D
0E
b0 P
b0 j
b0 m
b0 u
b0 z
b0 !"
b0 $"
0/
b0 g
b0 a
b0 ?"
b0 C"
b0 A"
b0 ;"
b0 :"
b0 S
b0 n
b0 ("
b0 '"
b0 T
b0 k
b0 &"
b0 %"
b0 3
b0 >"
b0 H
b0 ]
b0 Q"
b1011100000000000010010011 ,
b1011100000000000010010011 d
b1011100000000000010010011 M"
b100 &
b100 [
b100 ""
b0 %
b0 \
b0 e
b0 #"
b0 -
b0 b
b0 h
b0 N"
b0 <
b0 0"
b0 G"
b0 9
b0 6"
b0 K"
b0 ;
b0 7"
b0 I"
b0 A
b0 W
b0 F"
b0 6
b0 p
b0 L"
b0 8
b0 {
b0 J"
b0 :
b0 v
b0 H"
b0 C
b0 X
b0 E"
0>
0?
07
0=
0B
b0 K
b0 2"
b0 4"
b0 P"
b0 J
b0 ^
b0 3"
b0 O
b0 _
b0 t
b0 y
b0 1"
b0 O"
0M
0N
0I
0L
b0 )
b0 )"
b0 5"
b0 <"
b0 S"
b0 +
b0 ~
b0 R"
b0 '
b0 }
b0 T"
0(
0*
1!
#50000
0!
1"
#75000
b10111 .
b10111 i
b10111 D"
14
1/
b11 5
b11 c
b11 ="
02
b10011 g
b10011 a
b1 ?"
b10111 C"
b10111 ;"
b10111 '"
bx O
bx _
bx t
bx y
bx 1"
bx O"
bx 6
bx p
bx L"
bx C
bx X
bx E"
x=
xB
b1011100000000000010010011 -
b1011100000000000010010011 b
b1011100000000000010010011 h
b1011100000000000010010011 N"
b110100000000000100010011 ,
b110100000000000100010011 d
b110100000000000100010011 M"
b1000 &
b1000 [
b1000 ""
b100 %
b100 \
b100 e
b100 #"
1!
#100000
0!
#125000
b10111 @
b10111 -"
b10111 ."
b1101 .
b1101 i
b1101 D"
b10 U
b10 Y
b10 *"
b10111 Q
b10111 r
b10111 ,"
bx P
bx j
bx m
bx u
bx z
bx !"
bx $"
b10 ?"
b1101 C"
b1101 ;"
b1101 '"
b1000000000000000110010011 ,
b1000000000000000110010011 d
b1000000000000000110010011 M"
b1100 &
b1100 [
b1100 ""
b1000 %
b1000 \
b1000 e
b1000 #"
b110100000000000100010011 -
b110100000000000100010011 b
b110100000000000100010011 h
b110100000000000100010011 N"
b1 <
b1 0"
b1 G"
b10111 9
b10111 6"
b10111 K"
b10111 6
b10111 p
b10111 L"
b11 C
b11 X
b11 E"
17
0=
1B
xL
bx +
bx ~
bx R"
1!
#150000
0!
#175000
b1101 @
b1101 -"
b1101 ."
b1101 Q
b1101 r
b1101 ,"
b10000 .
b10000 i
b10000 D"
b11 ?"
b10000 C"
b10000 ;"
b10000 '"
x*
b1 K
b1 2"
b1 4"
b1 P"
b10111 O
b10111 _
b10111 t
b10111 y
b10111 1"
b10111 O"
1I
0L
b10 <
b10 0"
b10 G"
b1101 9
b1101 6"
b1101 K"
b1101 6
b1101 p
b1101 L"
b1000000000000000110010011 -
b1000000000000000110010011 b
b1000000000000000110010011 h
b1000000000000000110010011 N"
b1100010110001000110011 ,
b1100010110001000110011 d
b1100010110001000110011 M"
b10000 &
b10000 [
b10000 ""
b1100 %
b1100 \
b1100 e
b1100 #"
1!
#200000
0!
#225000
b10000 @
b10000 -"
b10000 ."
b10000000 1
b10000000 l
b10000000 @"
b11 .
b11 i
b11 D"
b10000 Q
b10000 r
b10000 ,"
b10111 P
b10111 j
b10111 m
b10111 u
b10111 z
b10111 !"
b10111 $"
04
b10 5
b10 c
b10 ="
b110011 g
b110011 a
b100 ?"
b11 C"
b10 A"
b11 ;"
b10 :"
b11 '"
b10000000 T
b10000000 k
b10000000 &"
b10 %"
b110 3
b110 >"
b1000000001000001000001010110011 ,
b1000000001000001000001010110011 d
b1000000001000001000001010110011 M"
b10100 &
b10100 [
b10100 ""
b10000 %
b10000 \
b10000 e
b10000 #"
b1100010110001000110011 -
b1100010110001000110011 b
b1100010110001000110011 h
b1100010110001000110011 N"
b11 <
b11 0"
b11 G"
b10000 9
b10000 6"
b10000 K"
b10000 6
b10000 p
b10000 L"
b10 K
b10 2"
b10 4"
b10 P"
b1101 O
b1101 _
b1101 t
b1101 y
b1101 1"
b1101 O"
b1 )
b1 )"
b1 5"
b1 <"
b1 S"
b10111 +
b10111 ~
b10111 R"
1(
0*
1!
#250000
0!
#275000
b10000 V
b10000 q
b10000 |
b10000 /"
b11101 @
b11101 -"
b11101 ."
b1101 0
b1101 o
b1101 B"
b10111 1
b10111 l
b10111 @"
1D
b1101 P
b1101 j
b1101 m
b1101 u
b1101 z
b1101 !"
b1101 $"
b1 G
b1 s
b1 8"
b10 F
b10 x
b10 9"
b1101 R
b1101 w
b1101 +"
b100 U
b100 Y
b100 *"
b10000 Q
b10000 r
b10000 ,"
b101 ?"
b10 C"
b1 A"
b10 ;"
b1 :"
b10000000 S
b10000000 n
b10000000 ("
b10 '"
b10111 T
b10111 k
b10111 &"
b1 %"
b1000 3
b1000 >"
b10 )
b10 )"
b10 5"
b10 <"
b10 S"
b1101 +
b1101 ~
b1101 R"
b11 K
b11 2"
b11 4"
b11 P"
b10000 O
b10000 _
b10000 t
b10000 y
b10000 1"
b10000 O"
b100 <
b100 0"
b100 G"
b11 9
b11 6"
b11 K"
b10 ;
b10 7"
b10 I"
b110 A
b110 W
b110 F"
b11 6
b11 p
b11 L"
b10000000 :
b10000000 v
b10000000 H"
b10 C
b10 X
b10 E"
0B
b1000000001000001000001010110011 -
b1000000001000001000001010110011 b
b1000000001000001000001010110011 h
b1000000001000001000001010110011 N"
b10100001000001100110011 ,
b10100001000001100110011 d
b10100001000001100110011 M"
b11000 &
b11000 [
b11000 ""
b10100 %
b10100 \
b10100 e
b10100 #"
1!
#300000
0!
#325000
b1010 @
b1010 -"
b1010 ."
b1101 Q
b1101 r
b1101 ,"
b0 0
b0 o
b0 B"
b10111 R
b10111 w
b10111 +"
b0 U
b0 Y
b0 *"
b1101 V
b1101 q
b1101 |
b1101 /"
b0 F
b0 x
b0 9"
b0 G
b0 s
b0 8"
0D
b10000 P
b10000 j
b10000 m
b10000 u
b10000 z
b10000 !"
b10000 $"
b110 ?"
b101 C"
b101 ;"
b101 '"
b0 3
b0 >"
b10100011110001110110011 ,
b10100011110001110110011 d
b10100011110001110110011 M"
b11100 &
b11100 [
b11100 ""
b11000 %
b11000 \
b11000 e
b11000 #"
b10100001000001100110011 -
b10100001000001100110011 b
b10100001000001100110011 h
b10100001000001100110011 N"
b0 S
b0 n
b0 ("
b101 <
b101 0"
b101 G"
b10 9
b10 6"
b10 K"
b1 ;
b1 7"
b1 I"
b1000 A
b1000 W
b1000 F"
b1101 8
b1101 {
b1101 J"
b10111 :
b10111 v
b10111 H"
b100 K
b100 2"
b100 4"
b100 P"
b10000 J
b10000 ^
b10000 3"
b11101 O
b11101 _
b11101 t
b11101 y
b11101 1"
b11101 O"
b11 )
b11 )"
b11 5"
b11 <"
b11 S"
b10000 +
b10000 ~
b10000 R"
1!
#350000
0!
#375000
b100001 @
b100001 -"
b100001 ."
b1010 Q
b1010 r
b1010 ,"
b10000 1
b10000 l
b10000 @"
b11101 P
b11101 j
b11101 m
b11101 u
b11101 z
b11101 !"
b11101 $"
b10 F
b10 x
b10 9"
b10 U
b10 Y
b10 *"
b1010 V
b1010 q
b1010 |
b1010 /"
b111 ?"
b11 A"
b11 :"
b10000 T
b10000 k
b10000 &"
b11 %"
b110 3
b110 >"
b100 )
b100 )"
b100 5"
b100 <"
b100 S"
b11101 +
b11101 ~
b11101 R"
b101 K
b101 2"
b101 4"
b101 P"
b1101 J
b1101 ^
b1101 3"
b1010 O
b1010 _
b1010 t
b1010 y
b1010 1"
b1010 O"
b110 <
b110 0"
b110 G"
b101 9
b101 6"
b101 K"
b0 A
b0 W
b0 F"
b0 8
b0 {
b0 J"
b10100011110001110110011 -
b10100011110001110110011 b
b10100011110001110110011 h
b10100011110001110110011 N"
b1000111111010000110011 ,
b1000111111010000110011 d
b1000111111010000110011 M"
b100000 &
b100000 [
b100000 ""
b11100 %
b11100 \
b11100 e
b11100 #"
1!
#400000
0!
#425000
b11010 @
b11010 -"
b11010 ."
b1101 0
b1101 o
b1101 B"
b0 1
b0 l
b0 @"
b100 U
b100 Y
b100 *"
b10000 R
b10000 w
b10000 +"
b1 F
b1 x
b1 9"
0D
b1010 P
b1010 j
b1010 m
b1010 u
b1010 z
b1010 !"
b1010 $"
b1000 ?"
b10 C"
b111 A"
b10 ;"
b111 :"
b1101 S
b1101 n
b1101 ("
b10 '"
b0 T
b0 k
b0 &"
b111 %"
b111 3
b111 >"
b100000110100010010110011 ,
b100000110100010010110011 d
b100000110100010010110011 M"
b100100 &
b100100 [
b100100 ""
b100000 %
b100000 \
b100000 e
b100000 #"
b1000111111010000110011 -
b1000111111010000110011 b
b1000111111010000110011 h
b1000111111010000110011 N"
b111 <
b111 0"
b111 G"
b11 ;
b11 7"
b11 I"
b110 A
b110 W
b110 F"
b10000 :
b10000 v
b10000 H"
b110 K
b110 2"
b110 4"
b110 P"
b1010 J
b1010 ^
b1010 3"
b100001 O
b100001 _
b100001 t
b100001 y
b100001 1"
b100001 O"
b101 )
b101 )"
b101 5"
b101 <"
b101 S"
b1010 +
b1010 ~
b1010 R"
1!
#450000
0!
#475000
b1101 Q
b1101 r
b1101 ,"
b100001 1
b100001 l
b100001 @"
b1101 V
b1101 q
b1101 |
b1101 /"
b1000 @
b1000 -"
b1000 ."
b0 0
b0 o
b0 B"
1E
b100001 P
b100001 j
b100001 m
b100001 u
b100001 z
b100001 !"
b100001 $"
b10 G
b10 s
b10 8"
b0 F
b0 x
b0 9"
b11 U
b11 Y
b11 *"
b11010 R
b11010 w
b11010 +"
b1001 ?"
b1000 C"
b110 A"
b1000 ;"
b110 :"
b0 S
b0 n
b0 ("
b1000 '"
b110 %"
b100 3
b100 >"
b110 )
b110 )"
b110 5"
b110 <"
b110 S"
b100001 +
b100001 ~
b100001 R"
b111 K
b111 2"
b111 4"
b111 P"
b11010 O
b11010 _
b11010 t
b11010 y
b11010 1"
b11010 O"
b1000 <
b1000 0"
b1000 G"
b10 9
b10 6"
b10 K"
b111 ;
b111 7"
b111 I"
b111 A
b111 W
b111 F"
b1101 8
b1101 {
b1101 J"
b0 :
b0 v
b0 H"
b100000110100010010110011 -
b100000110100010010110011 b
b100000110100010010110011 h
b100000110100010010110011 N"
b0 ,
b0 d
b0 M"
b101000 &
b101000 [
b101000 ""
b100100 %
b100100 \
b100100 e
b100100 #"
1!
#500000
0!
#525000
b1000 Q
b1000 r
b1000 ,"
b101001 @
b101001 -"
b101001 ."
b0 1
b0 l
b0 @"
b101 U
b101 Y
b101 *"
b1000 V
b1000 q
b1000 |
b1000 /"
b100001 R
b100001 w
b100001 +"
b10 F
b10 x
b10 9"
b0 G
b0 s
b0 8"
0E
b11010 P
b11010 j
b11010 m
b11010 u
b11010 z
b11010 !"
b11010 $"
x4
0/
bx 5
bx c
bx ="
x2
b0 g
b0 a
b0 ?"
b0 C"
b0 A"
b0 ;"
b0 :"
b0 '"
b0 %"
b0 3
b0 >"
b101100 &
b101100 [
b101100 ""
b101000 %
b101000 \
b101000 e
b101000 #"
b0 -
b0 b
b0 h
b0 N"
b0 T
b0 k
b0 &"
b1001 <
b1001 0"
b1001 G"
b1000 9
b1000 6"
b1000 K"
b110 ;
b110 7"
b110 I"
b100 A
b100 W
b100 F"
b0 8
b0 {
b0 J"
b100001 :
b100001 v
b100001 H"
b1000 K
b1000 2"
b1000 4"
b1000 P"
b1101 J
b1101 ^
b1101 3"
b1000 O
b1000 _
b1000 t
b1000 y
b1000 1"
b1000 O"
b111 )
b111 )"
b111 5"
b111 <"
b111 S"
b11010 +
b11010 ~
b11010 R"
1!
#550000
0!
#575000
b0 Q
b0 r
b0 ,"
b0 V
b0 q
b0 |
b0 /"
b0 @
b0 -"
b0 ."
b1000 P
b1000 j
b1000 m
b1000 u
b1000 z
b1000 !"
b1000 $"
b0 F
b0 x
b0 9"
b0 R
b0 w
b0 +"
b1000 )
b1000 )"
b1000 5"
b1000 <"
b1000 S"
b1000 +
b1000 ~
b1000 R"
b1001 K
b1001 2"
b1001 4"
b1001 P"
b1000 J
b1000 ^
b1000 3"
b101001 O
b101001 _
b101001 t
b101001 y
b101001 1"
b101001 O"
b0 <
b0 0"
b0 G"
b0 9
b0 6"
b0 K"
b0 ;
b0 7"
b0 I"
b0 A
b0 W
b0 F"
b0 :
b0 v
b0 H"
bx C
bx X
bx E"
07
x=
xB
b110000 &
b110000 [
b110000 ""
b101100 %
b101100 \
b101100 e
b101100 #"
1!
#600000
0!
#625000
b101001 P
b101001 j
b101001 m
b101001 u
b101001 z
b101001 !"
b101001 $"
b110100 &
b110100 [
b110100 ""
b110000 %
b110000 \
b110000 e
b110000 #"
b0 K
b0 2"
b0 4"
b0 P"
b0 J
b0 ^
b0 3"
b0 O
b0 _
b0 t
b0 y
b0 1"
b0 O"
0I
xL
b1001 )
b1001 )"
b1001 5"
b1001 <"
b1001 S"
b101001 +
b101001 ~
b101001 R"
1!
#650000
0!
#675000
b0 P
b0 j
b0 m
b0 u
b0 z
b0 !"
b0 $"
b0 )
b0 )"
b0 5"
b0 <"
b0 S"
b0 +
b0 ~
b0 R"
0(
x*
b111000 &
b111000 [
b111000 ""
b110100 %
b110100 \
b110100 e
b110100 #"
1!
#700000
0!
#725000
b111100 &
b111100 [
b111100 ""
b111000 %
b111000 \
b111000 e
b111000 #"
1!
#750000
0!
#775000
b1000000 &
b1000000 [
b1000000 ""
b111100 %
b111100 \
b111100 e
b111100 #"
1!
#800000
0!
#825000
b1000100 &
b1000100 [
b1000100 ""
b1000000 %
b1000000 \
b1000000 e
b1000000 #"
1!
#850000
0!
#875000
b1001000 &
b1001000 [
b1001000 ""
b1000100 %
b1000100 \
b1000100 e
b1000100 #"
1!
#900000
0!
#925000
b1001100 &
b1001100 [
b1001100 ""
b1001000 %
b1001000 \
b1001000 e
b1001000 #"
1!
#950000
0!
#975000
b1010000 &
b1010000 [
b1010000 ""
b1001100 %
b1001100 \
b1001100 e
b1001100 #"
1!
#1000000
0!
#1025000
b1010100 &
b1010100 [
b1010100 ""
b1010000 %
b1010000 \
b1010000 e
b1010000 #"
1!
#1050000
0!
#1075000
b1011000 &
b1011000 [
b1011000 ""
b1010100 %
b1010100 \
b1010100 e
b1010100 #"
1!
#1100000
0!
#1125000
b1011100 &
b1011100 [
b1011100 ""
b1011000 %
b1011000 \
b1011000 e
b1011000 #"
1!
#1150000
0!
#1175000
b1100000 &
b1100000 [
b1100000 ""
b1011100 %
b1011100 \
b1011100 e
b1011100 #"
1!
#1200000
0!
#1225000
b1100100 &
b1100100 [
b1100100 ""
b1100000 %
b1100000 \
b1100000 e
b1100000 #"
1!
#1250000
0!
#1275000
b1101000 &
b1101000 [
b1101000 ""
b1100100 %
b1100100 \
b1100100 e
b1100100 #"
1!
#1300000
0!
#1325000
b1101100 &
b1101100 [
b1101100 ""
b1101000 %
b1101000 \
b1101000 e
b1101000 #"
1!
#1350000
0!
#1375000
b1110000 &
b1110000 [
b1110000 ""
b1101100 %
b1101100 \
b1101100 e
b1101100 #"
1!
#1400000
0!
#1425000
b1110100 &
b1110100 [
b1110100 ""
b1110000 %
b1110000 \
b1110000 e
b1110000 #"
1!
#1450000
0!
#1475000
b1111000 &
b1111000 [
b1111000 ""
b1110100 %
b1110100 \
b1110100 e
b1110100 #"
1!
#1500000
0!
#1525000
b1111100 &
b1111100 [
b1111100 ""
b1111000 %
b1111000 \
b1111000 e
b1111000 #"
1!
#1550000
0!
#1575000
b10000000 &
b10000000 [
b10000000 ""
b1111100 %
b1111100 \
b1111100 e
b1111100 #"
1!
#1600000
0!
#1625000
bx ,
bx d
bx M"
b10000100 &
b10000100 [
b10000100 ""
b10000000 %
b10000000 \
b10000000 e
b10000000 #"
1!
#1650000
0!
#1675000
bx 0
bx o
bx B"
bx 1
bx l
bx @"
x/
bx g
bx a
bx ?"
bx C"
bx A"
bx ;"
bx :"
bx S
bx n
bx ("
bx '"
bx T
bx k
bx &"
bx %"
bx 3
bx >"
bx -
bx b
bx h
bx N"
b10001000 &
b10001000 [
b10001000 ""
b10000100 %
b10000100 \
b10000100 e
b10000100 #"
1!
#1700000
0!
#1725000
bx Q
bx r
bx ,"
bx @
bx -"
bx ."
bx V
bx q
bx |
bx /"
bx R
bx w
bx +"
b10001100 &
b10001100 [
b10001100 ""
b10001000 %
b10001000 \
b10001000 e
b10001000 #"
bx <
bx 0"
bx G"
bx 9
bx 6"
bx K"
bx ;
bx 7"
bx I"
bx A
bx W
bx F"
bx 8
bx {
bx J"
bx :
bx v
bx H"
x7
1!
#1750000
0!
#1775000
bx K
bx 2"
bx 4"
bx P"
bx J
bx ^
bx 3"
bx O
bx _
bx t
bx y
bx 1"
bx O"
xI
b10010000 &
b10010000 [
b10010000 ""
b10001100 %
b10001100 \
b10001100 e
b10001100 #"
1!
#1800000
0!
